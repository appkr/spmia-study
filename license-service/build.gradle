version = '0.0.1-SNAPSHOT'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	compile 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'

	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'mysql:mysql-connector-java'

	implementation 'org.springframework.cloud:spring-cloud-config-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-feign:1.4.7.RELEASE'
}

test {
	useJUnitPlatform()
}

jib {
    from {
        image = "openjdk:8-jre-alpine"
    }

    to {
        image = "${project.name}:${project.version}"
        tags = ['latest']
    }

    // If set to packaged, puts the JAR artifact built by the Gradle Java plugin into the final image.
    // If set to exploded (default), containerizes individual .class files and resources files.
    containerizingMode = 'packaged'

    container {
        jvmFlags = [
                "-Dspring.profiles.active=docker",
                "-Deureka.client.serviceUrl.defaultZone=http://eurekasvr:8761/eureka/",
                "-Dspring.cloud.config.uri=http://configsvr:8888"
        ]
        ports = ["8080"]
        creationTime = "USE_CURRENT_TIMESTAMP"
    }
}